%ESTIMATEMAP Apply Kalman filter on map.%   G = ESTIMATEMAP(G,NU,R,H) updates the map G by application of%   the extended Kalman filter (EKF). The function implements a%   stacked version of the EKF with the following input arguments:%   The stacked measurement Jacobian H of size n x p, where p is%   the number of measurements (which in turn is the number of%   observed features times their number of parameters), and n %   the size of the map state vector. The stacked p x 1 innova-%   tion vector NU, and the stacked p x p observation covariance%   matrix R.%%   See also SLAM, MEANWM.% v.1.0, Kai Arras, Nov. 2003, CAS-KTHfunction G = estimatemap(G,nu,R,H)X = get(G,'x');%C = get(G,'C');[x,C] = getstate(G);n  = length(X);% Get robot and its poser  = getrobot(G); %get(X{1});xr = get(r,'x');Cr = get(r,'C');for i = 2:n,    xyFeature(1:2,i-1)=get(X{i},'x'); % xy=[2x1]endif n>1distVector=sqrt((xyFeature(1,1:n-1)-xr(1)).^2 + (xyFeature(2,1:n-1)-xr(2)).^2);tmpIndex1 = find(distVector<=0.6);tmpIndex2 = find(distVector>0.6); m=length(tmpIndex1);xTmp(1:2*m)=xyFeature(:,tmpIndex1); % change format from xyFeature=[2 x m] to x=[1 x 2*m]'xTmp=xTmp';x=vertcat(xr,xTmp);mx=length(x); % length of the new state vector% filter out uninteresting element%Cnew=zeros(mx,mx);for q=1:length(tmpIndex2),    C(tmpIndex2(q)+3:tmpIndex2(q)+4,:)=[];    C(:,tmpIndex2(q)+3:tmpIndex2(q)+4)=[];        H(:,tmpIndex2(q)+3:tmpIndex2(q)+4)=[];        % R=?    % nu=?    %update length of X    X{}    G.X{i} = set(G.X{i},'x',X(iacc:iacc+nr-1),'c',m.C(i,i).C);endif ~size(H,1)==mx,    disp('matrix dim fault, estimatemap')endendif ~isempty(nu),    % get state vector and covariance  %[x,C] = getstate(G);    % EKF  S = H*C*H' + R;  K = C*H'*inv(S);  x = x + K*nu;  C = C - K*H*C;  % put back updated state vector and covariance  if ~size(x,1)==size(C,2),    disp('matrix dim fault, estimatemap')  end  G = setstate(G,x,C);    if det(C) < 0,    disp('--> estimatemap: cov negative definite after!');  end;  end;